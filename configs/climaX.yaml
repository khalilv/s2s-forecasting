seed_everything: 42

# ---------------------------- TRAINER -------------------------------------------
trainer:
  default_root_dir: /glade/derecho/scratch/kvirji/s2s-forecasting/exps/climaX/baseline/6hr_finetune

  precision: 16-mixed

  devices: 4
  num_nodes: 1
  accelerator: gpu
  strategy:     
    class_path: pytorch_lightning.strategies.DDPStrategy
    init_args:
      timeout: 02:00:00
      # find_unused_parameters: true

  min_epochs: 1
  max_epochs: 100
  enable_progress_bar: true

  sync_batchnorm: true
  enable_checkpointing: true

  # debugging
  fast_dev_run: false

  logger:
    class_path: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
    init_args:
      save_dir: ${trainer.default_root_dir}/logs
      name: null
      version: null
      log_graph: false
      default_hp_metric: true
      prefix: ""

  callbacks:
    # - class_path: pytorch_lightning.callbacks.LearningRateFinder
    #   init_args:
    #     attr_name: "optim_lr"

    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "step"

    - class_path: s2s.utils.callbacks.GradientMonitor
      init_args:
        log_every_n_steps: 50

    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        dirpath: "${trainer.default_root_dir}/checkpoints"
        monitor: "val/level_w_mse_norm" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        save_top_k: 1 # save k best models (determined by above metric)
        save_last: true # additionaly always save model from last epoch
        verbose: false
        filename: "epoch_{epoch:03d}"
        auto_insert_metric_name: false

    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        monitor: "val/level_w_mse_norm" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        patience: 5 # how many validation epochs of not improving until training stops
        min_delta: 0. # minimum change in the monitored metric needed to qualify as an improvement

    - class_path: pytorch_lightning.callbacks.RichModelSummary
      init_args:
        max_depth: -1

    - class_path: pytorch_lightning.callbacks.RichProgressBar

# ---------------------------- MODEL -------------------------------------------
model:
  delta_time: 6
  temporal_attention: false
  history_size: 2
  lr: 5e-7
  beta_1: 0.9
  beta_2: 0.999
  weight_decay: 1e-5
  warmup_steps: 12500
  max_steps: 125000
  warmup_start_lr: 1e-8
  eta_min: 1e-8
  pretrained_path: "/glade/derecho/scratch/kvirji/s2s-forecasting/pretrained_weights/climaX-5.625-cmip6.ckpt"
  img_size: [32, 64]
  patch_size: 2
  embed_dim: 1024
  depth: 8
  decoder_depth: 2
  num_heads: 16
  mlp_ratio: 4
  drop_path: 0.1
  drop_rate: 0.1
  monitor_test_steps: [1,3,5]



# ---------------------------- DATA -------------------------------------------
data:
  root_dir: /glade/derecho/scratch/kvirji/DATA/preprocessed/era5/1959-2023_01_10-6h-64x32_equiangular_conservative_n_shards_1
  climatology_val: /glade/derecho/scratch/kvirji/DATA/preprocessed/era5_climatology/1990-2017_6h_64x32_equiangular_conservative.zarr
  climatology_test: /glade/derecho/scratch/kvirji/DATA/preprocessed/era5_climatology/1990-2019_6h_64x32_equiangular_conservative.zarr
  static_variables: [
    "land_sea_mask",
    "orography",
  ]
  in_variables: [
      "2m_temperature",
      "10m_u_component_of_wind",
      "10m_v_component_of_wind",
      "geopotential_50",
      "geopotential_250",
      "geopotential_500",
      "geopotential_600",
      "geopotential_700",
      "geopotential_850",
      "geopotential_925",
      "u_component_of_wind_50",
      "u_component_of_wind_250",
      "u_component_of_wind_500",
      "u_component_of_wind_600",
      "u_component_of_wind_700",
      "u_component_of_wind_850",
      "u_component_of_wind_925",
      "v_component_of_wind_50",
      "v_component_of_wind_250",
      "v_component_of_wind_500",
      "v_component_of_wind_600",
      "v_component_of_wind_700",
      "v_component_of_wind_850",
      "v_component_of_wind_925",
      "temperature_50",
      "temperature_250",
      "temperature_500",
      "temperature_600",
      "temperature_700",
      "temperature_850",
      "temperature_925",
      "relative_humidity_50",
      "relative_humidity_250",
      "relative_humidity_500",
      "relative_humidity_600",
      "relative_humidity_700",
      "relative_humidity_850",
      "relative_humidity_925",
      "specific_humidity_50",
      "specific_humidity_250",
      "specific_humidity_500",
      "specific_humidity_600",
      "specific_humidity_700",
      "specific_humidity_850",
      "specific_humidity_925",
    ]
  plot_variables: [
      "2m_temperature",
  ]
  # [history_step * hrs_each_step * h = history timestamp (hrs)] for h in history_size 
  # [predict_step * hrs_each_step * lt = max lead time (hrs)] for lt in predict_size
  predict_size: 1
  predict_step: 1
  history_size: 1
  history_step: 1
  hrs_each_step: 6
  max_buffer_size: 1000
  batch_size: 32
  mem_load: 1.0
  num_workers: 2
  pin_memory: true
  normalize_data: true
